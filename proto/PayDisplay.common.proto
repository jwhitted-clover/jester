syntax = "proto3";

package com.clover.grpc;

option csharp_namespace = "Clover.Grpc";

enum AccountType {
  ACCOUNTTYPE_UNKNOWN = 0;
  ACCOUNTTYPE_CREDIT = 1;
  ACCOUNTTYPE_DEBIT = 2;
  ACCOUNTTYPE_CHECKING = 3;
  ACCOUNTTYPE_SAVINGS = 4;
}

enum AdditionalChargeType {
  ADDITIONALCHARGETYPE_UNKNOWN = 0;
  ADDITIONALCHARGETYPE_INTERAC = 1;
}

message AdditionalChargeAmount {
  string Id = 1;
  int64 Amount = 2;
  AdditionalChargeType Type = 3;
}

message Address {
  string Id = 1;
  string Address1 = 2;
  string Address2 = 3;
  string Address3 = 4;
  string City = 5;
  string Country = 6;
  string PhoneNumber = 7;
  string State = 8;
  string Zip = 9;
}

message AppTracking {
  string DeveloperAppId = 1;
  string ApplicationName = 2;
  string ApplicationId = 3;
  string ApplicationVersion = 4;
  string SourceSdk = 5;
  string SourceSdkVersion = 6;
  Reference PaymentRef = 7;
  Reference CreditRef = 8;
  Reference RefundRef = 9;
  Reference CreditRefundRef = 10;
}

enum AvsResult {
  AVSRESULT_UNKNOWN = 0;
  AVSRESULT_SUCCESS = 1;
  AVSRESULT_ZIP_CODE_MATCH = 2;
  AVSRESULT_ZIP_CODE_MATCH_ADDRESS_NOT_CHECKED = 3;
  AVSRESULT_ADDRESS_MATCH = 4;
  AVSRESULT_ADDRESS_MATCH_ZIP_NOT_CHECKED = 5;
  AVSRESULT_NEITHER_MATCH = 6;
  AVSRESULT_SERVICE_FAILURE = 7;
  AVSRESULT_SERVICE_UNAVAILABLE = 8;
  AVSRESULT_NOT_CHECKED = 9;
  AVSRESULT_ZIP_CODE_NOT_MATCHED_ADDRESS_NOT_CHECKED = 10;
  AVSRESULT_ADDRESS_NOT_MATCHED_ZIP_CODE_NOT_CHECKED = 11;
}

message Batch {
  string Id = 1;
  int64 MerchantId = 2;
  int64 FirstGatewayTxId = 3;
  int64 LastGatewayTxId = 4;
  int64 AccountId = 5;
  int64 TxCount = 6;
  int64 TotalBatchAmount = 7;
  string Devices = 8;
  BatchState State = 9;
  BatchType BatchType = 10;
  int64 CreatedTime = 11;
  int64 ModifiedTime = 12;
  BatchDetail BatchDetails = 13;
}

message BatchCardTotal {
  CardType cardType = 1;
  int64 count = 2;
  int64 total = 3;
}

message BatchDetail {
  BatchTotalStats batchTotals = 1;
  repeated ServerTotalStats serverTotals = 2;
  repeated BatchCardTotal cardTotals = 3;
  int64 openTips = 4;
  int64 openTabs = 5;
}

enum BatchState {
  BATCHSTATE_UNKNOWN = 0;
  BATCHSTATE_OPEN = 1;
  BATCHSTATE_QUEUED_FOR_PROCESSING = 2;
  BATCHSTATE_PROCESSING = 3;
  BATCHSTATE_CLOSED = 4;
  BATCHSTATE_FAILED = 5;
}

message BatchTotalStats {
  BatchTotalType Sales = 1;
  BatchTotalType Refunds = 2;
  BatchTotalType Net = 3;
  BatchTotalType GiftCardLoads = 4;
  BatchTotalType GiftCardCashOuts = 5;
  BatchTotalType Tax = 6;
  BatchTotalType Tips = 7;
}

message BatchTotalType {
  int64 count = 1;
  int64 total = 2;
}

enum BatchType {
  BATCHTYPE_UNKNOWN = 0;
  BATCHTYPE_MANUAL_CLOSE = 1;
  BATCHTYPE_AUTO_CLOSE = 2;
}

message Card {
  string Id = 1;
  string First6 = 2;
  string Last4 = 3;
  string FirstName = 4;
  string LastName = 5;
  string ExpirationDate = 6;
  string CardType = 7;
  string Token = 8;
}

message CardData {
  string Track1 = 1;
  string Track2 = 2;
  string Track3 = 3;
  bool Encrypted = 4;
  string MaskedTrack1 = 5;
  string MaskedTrack2 = 6;
  string MaskedTrack3 = 7;
  string Pan = 8;
  string CardholderName = 9;
  string FirstName = 10;
  string LastName = 11;
  string Exp = 12;
  string Last4 = 13;
  string First6 = 14;
}

enum CardEntryType {
  CARDENTRYTYPE_UNKNOWN = 0;
  CARDENTRYTYPE_SWIPED = 1;
  CARDENTRYTYPE_KEYED = 2;
  CARDENTRYTYPE_VOICE = 3;
  CARDENTRYTYPE_VAULTED = 4;
  CARDENTRYTYPE_OFFLINE_SWIPED = 5;
  CARDENTRYTYPE_OFFLINE_KEYED = 6;
  CARDENTRYTYPE_EMV_CONTACT = 7;
  CARDENTRYTYPE_EMV_CONTACTLESS = 8;
  CARDENTRYTYPE_MSD_CONTACTLESS = 9;
  CARDENTRYTYPE_PINPAD_MANUAL_ENTRY = 10;
}

message CardTransaction {
  Reference PaymentRef = 1;
  Reference CreditRef = 2;
  CardType CardType = 3;
  CardEntryType EntryType = 4;
  string First6 = 5;
  string Last4 = 6;
  CardTransactionType Type = 7;
  string AuthCode = 8;
  string ReferenceId = 9;
  string TransactionNo = 10;
  CardTransactionState State = 11;
  map<string, string> Extra = 12;
  int64 BegBalance = 13;
  int64 EndBalance = 14;
  AvsResult AvsResult = 15;
  string CardholderName = 16;
  string Token = 17;
  VaultedCard VaultedCard = 18;
}

enum CardTransactionState {
  CARDTRANSACTIONSTATE_UNKNOWN = 0;
  CARDTRANSACTIONSTATE_PENDING = 1;
  CARDTRANSACTIONSTATE_CLOSED = 2;
}

enum CardTransactionType {
  CARDTRANSACTIONTYPE_UNKNOWN = 0;
  CARDTRANSACTIONTYPE_AUTH = 1;
  CARDTRANSACTIONTYPE_PRE_AUTH = 2;
  CARDTRANSACTIONTYPE_PRE_AUTH_CAPTURE = 3;
  CARDTRANSACTIONTYPE_ADJUST = 4;
  CARDTRANSACTIONTYPE_VOID = 5;
  CARDTRANSACTIONTYPE_VOID_RETURN = 6;
  CARDTRANSACTIONTYPE_RETURN = 7;
  CARDTRANSACTIONTYPE_REFUND = 8;
  CARDTRANSACTIONTYPE_NAKED_REFUND = 9;
  CARDTRANSACTIONTYPE_GET_BALANCE = 10;
  CARDTRANSACTIONTYPE_BATCH_CLOSE = 11;
  CARDTRANSACTIONTYPE_ACTIVATE = 12;
  CARDTRANSACTIONTYPE_BALANCE_LOCK = 13;
  CARDTRANSACTIONTYPE_LOAD = 14;
  CARDTRANSACTIONTYPE_CASHOUT = 15;
  CARDTRANSACTIONTYPE_CASHOUT_ACTIVE_STATUS = 16;
  CARDTRANSACTIONTYPE_REDEMPTION = 17;
  CARDTRANSACTIONTYPE_REDEMPTION_UNLOCK = 18;
  CARDTRANSACTIONTYPE_RELOAD = 19;
}

enum CardType {
  CARDTYPE_UNKNOWN = 0;
  CARDTYPE_VISA = 1;
  CARDTYPE_MC = 2;
  CARDTYPE_AMEX = 3;
  CARDTYPE_DISCOVER = 4;
  CARDTYPE_DINERS_CLUB = 5;
  CARDTYPE_JCB = 6;
  CARDTYPE_MAESTRO = 7;
  CARDTYPE_SOLO = 8;
  CARDTYPE_LASER = 9;
  CARDTYPE_CHINA_UNION_PAY = 10;
  CARDTYPE_CARTE_BLANCHE = 11;
  CARDTYPE_GIFT_CARD = 12;
  CARDTYPE_EBT = 13;
  CARDTYPE_INTERAC = 14;
  CARDTYPE_OTHER = 15;
}

message CashAdvanceExtra {
  string cashAdvanceSerialNum = 1;
  CashAdvanceCustomerIdentification CashAdvanceCustomerIdentification = 2;
  Reference PaymentRef = 3;
}

message CashAdvanceCustomerIdentification {
  IdType IdType = 1;
  string SerialNumber = 2;
  string MaskedSerialNumber = 3;
  string EncryptedSerialNumber = 4;
  string ExpirationDate = 5;
  string IssuingState = 6;
  string IssuingCountry = 7;
  string CustomerName = 8;
  string AddressStreet1 = 9;
  string AddressStreet2 = 10;
  string AddressCity = 11;
  string AddressState = 12;
  string AddressZipCode = 13;
  string AddressCountry = 14;
}

message Challenge {
  string Message = 1;
  ChallengeType Type = 2;
  VoidReason Reason = 3;
}

enum ChallengeType {
  CHALLENGE_TYPE_UNKNOWN = 0;
  CHALLENGETYPE_DUPLICATE_CHALLENGE = 1;
  CHALLENGETYPE_OFFLINE_CHALLENGE = 2;
}

message Credit {
  string Id = 1;
  Reference OrderRef = 2;
  Reference Device = 3;
  Tender Tender = 4;
  Reference Employee = 5;
  Customer Customers = 6;
  int64 Amount = 7;
  int64 TaxAmount = 8;
  repeated TaxableAmountRate TaxRates = 9;
  int64 CreatedTime = 10;
  int64 ClientCreatedTime = 11;
  CardTransaction CardTransaction = 12;
  bool Voided = 13;
  string VoidReason = 14;
}

message Customer {
  string Id = 1;
  Reference OrderRef = 2;
  string FirstName = 3;
  string LastName = 4;
  bool MarketingAllowed = 5;
  int64 CustomerSince = 6;
  repeated Reference Orders = 7;
  repeated Address Addresses = 8;
  repeated EmailAddress EmailAddresses = 9;
  repeated PhoneNumber PhoneNumbers = 10;
  repeated Card Cards = 11;
}

enum CustomerIdMethod {
  CUSTOMERIDMETHOD_UNKNOWN = 0;
  CUSTOMERIDMETHOD_NAME = 1;
  CUSTOMERIDMETHOD_TABLE = 2;
  CUSTOMERIDMETHOD_NAME_TABLE = 3;
}

message CustomerInfo {
  Customer Customer = 1;
  string DisplayString = 2;
  string ExternalId = 3;
  string ExternalSystemName = 4;
  map<string, string> Extras = 5;
}

enum DataEntryLocation {
  DATAENTRYLOCATION_UNKNOWN = 0;
  DATAENTRYLOCATION_ON_SCREEN = 1;
  DATAENTRYLOCATION_ON_PAPER = 2;
  DATAENTRYLOCATION_NONE = 3;
}

message DataProviderConfig {
  string Type = 1;
  map<string, string> Configuration = 2;
}

message DccInfo {
  int64 InquiryRateId = 1;
  bool DccApplied = 2;
  string ForeignCurrencyCode = 3;
  int64 ForeignAmount = 4;
  double ExchangeRate = 5;
  string MarginRatePercentage = 6;
  string ExchangeRateSourceName = 7;
  string ExchangeRateSourceTimeStamp = 8;
  Reference PaymentRef = 9;
  Reference CreditRef = 10;
}

enum DeviceErrorType {
  DEVICEERRORTYPE_UNKNOWN = 0;
  DEVICEERRORTYPE_COMMUNICATION_ERROR = 1;
  DEVICEERRORTYPE_VALIDATION_ERROR = 2;
  DEVICEERRORTYPE_EXCEPTION = 3;
}

enum DeviceErrorCode {
  DEVICEERRORCODE_NONE = 0;
  DEVICEERRORCODE_INVALID_CONFIG = -16384;
  DEVICEERRORCODE_IO_SYNC_FAILED = -16383;
  DEVICEERRORCODE_GET_STRING = -16382;
  DEVICEERRORCODE_INVALID_ENDPOINT = -16381;
  DEVICEERRORCODE_ABORT_ENDPOINT = -16380;
  DEVICEERRORCODE_DEVICE_IO_CONTROL = -16379;
  DEVICEERRORCODE_GET_OVERLAPPED_RESULT = -16378;
  DEVICEERRORCODE_RECEIVE_THREAD_TERMINATED = -16377;
  DEVICEERRORCODE_WRITE_FAILED = -16376;
  DEVICEERRORCODE_READ_FAILED = -16375;
  DEVICEERRORCODE_IO_CONTROL_MESSAGE = -16374;
  DEVICEERRORCODE_CANCEL_IO_FAILED = -16373;
  DEVICEERRORCODE_IO_CANCELLED = -16372;
  DEVICEERRORCODE_IO_TIMED_OUT = -16371;
  DEVICEERRORCODE_IO_ENDPOINT_GLOBAL_CANCEL_REDO = -16370;
  DEVICEERRORCODE_GET_DEVICE_KEY_VALUE_FAILED = -16369;
  DEVICEERRORCODE_SET_DEVICE_KEY_VALUE_FAILED = -16368;
  DEVICEERRORCODE_WIN32_ERROR = -16367;
  DEVICEERRORCODE_DEVICE_ALLREADY_LOCKED = -16366;
  DEVICEERRORCODE_ENDPOINT_ALLREADY_LOCKED = -16365;
  DEVICEERRORCODE_DEVICE_NOT_FOUND = -16364;
  DEVICEERRORCODE_USER_ABORTED = -16363;
  DEVICEERRORCODE_INVALID_PARAM = -16362;
  DEVICEERRORCODE_ACCESS_DENIED = -16361;
  DEVICEERRORCODE_RESOURCE_BUSY = -16360;
  DEVICEERRORCODE_OVERFLOW = -16359;
  DEVICEERRORCODE_PIPE_ERROR = -16358;
  DEVICEERRORCODE_INTERRUPTED = -16357;
  DEVICEERRORCODE_INSUFFICIENT_MEMORY = -16356;
  DEVICEERRORCODE_NOT_SUPPORTED = -16355;
  DEVICEERRORCODE_UNKNOWN_ERROR = -16354;
  DEVICEERRORCODE_MONO_API_ERROR = -16353;
}

enum DeviceEventState {
  DEVICEEVENTSTATE_UNKNOWN = 0;
  DEVICEEVENTSTATE_START = 1;
  DEVICEEVENTSTATE_FAILED = 2;
  DEVICEEVENTSTATE_FATAL = 3;
  DEVICEEVENTSTATE_TRY_AGAIN = 4;
  DEVICEEVENTSTATE_INPUT_ERROR = 5;
  DEVICEEVENTSTATE_PIN_BYPASS_CONFIRM = 6;
  DEVICEEVENTSTATE_CANCELED = 7;
  DEVICEEVENTSTATE_TIMED_OUT = 8;
  DEVICEEVENTSTATE_DECLINED = 9;
  DEVICEEVENTSTATE_VOIDED = 10;
  DEVICEEVENTSTATE_CONFIGURING = 11;
  DEVICEEVENTSTATE_PROCESSING = 12;
  DEVICEEVENTSTATE_REMOVE_CARD = 13;
  DEVICEEVENTSTATE_PROCESSING_GO_ONLINE = 14;
  DEVICEEVENTSTATE_PROCESSING_CREDIT = 15;
  DEVICEEVENTSTATE_PROCESSING_SWIPE = 16;
  DEVICEEVENTSTATE_SELECT_APPLICATION = 17;
  DEVICEEVENTSTATE_PIN_PAD = 18;
  DEVICEEVENTSTATE_MANUAL_CARD_NUMBER = 19;
  DEVICEEVENTSTATE_MANUAL_CARD_CVV = 20;
  DEVICEEVENTSTATE_MANUAL_CARD_CVV_UNREADABLE = 21;
  DEVICEEVENTSTATE_MANUAL_CARD_EXPIRATION = 22;
  DEVICEEVENTSTATE_SELECT_ACCOUNT = 23;
  DEVICEEVENTSTATE_CASHBACK_CONFIRM = 24;
  DEVICEEVENTSTATE_CASHBACK_SELECT = 25;
  DEVICEEVENTSTATE_CONTACTLESS_TAP_REQUIRED = 26;
  DEVICEEVENTSTATE_VOICE_REFERRAL_RESULT = 27;
  DEVICEEVENTSTATE_CONFIRM_PARTIAL_AUTH = 28;
  DEVICEEVENTSTATE_PACKET_EXCEPTION = 29;
  DEVICEEVENTSTATE_CONFIRM_DUPLICATE_CHECK = 30;
  DEVICEEVENTSTATE_VERIFY_SIGNATURE_ON_PAPER = 31;
  DEVICEEVENTSTATE_VERIFY_SIGNATURE_ON_PAPER_CONFIRM_VOID = 32;
  DEVICEEVENTSTATE_VERIFY_SIGNATURE_ON_SCREEN = 33;
  DEVICEEVENTSTATE_VERIFY_SIGNATURE_ON_SCREEN_CONFIRM_VOID = 34;
  DEVICEEVENTSTATE_ADD_SIGNATURE = 35;
  DEVICEEVENTSTATE_SIGNATURE_ON_SCREEN_FALLBACK = 36;
  DEVICEEVENTSTATE_RETURN_TO_MERCHANT = 37;
  DEVICEEVENTSTATE_SIGNATURE_REJECT = 38;
  DEVICEEVENTSTATE_ADD_SIGNATURE_CANCEL_CONFIRM = 39;
  DEVICEEVENTSTATE_STARTING_CUSTOM_ACTIVITY = 40;
  DEVICEEVENTSTATE_CUSTOM_ACTIVITY = 41;
  DEVICEEVENTSTATE_ADD_TIP = 42;
  DEVICEEVENTSTATE_RECEIPT_OPTIONS = 43;
  DEVICEEVENTSTATE_HANDLE_TENDER = 44;
  DEVICEEVENTSTATE_SELECT_WITHDRAW_FROM_ACCOUNT = 45;
  DEVICEEVENTSTATE_VERIFY_SURCHARGES = 46;
  DEVICEEVENTSTATE_VOID_CONFIRM = 47;
  // for Argentina
  DEVICEEVENTSTATE_ENTER_PAN_LAST_FOUR = 48;
  DEVICEEVENTSTATE_ERROR_SCREEN = 49;
  DEVICEEVENTSTATE_FISCAL_INVOICE_NUMBER = 50;
  DEVICEEVENTSTATE_ENTER_INSTALLMENTS = 51;
  DEVICEEVENTSTATE_SELECT_INSTALLMENT_PLAN = 52;
  DEVICEEVENTSTATE_ENTER_INSTALLMENT_CODE = 53;
  DEVICEEVENTSTATE_PERSONAL_ID_ENTRY = 54;
  DEVICEEVENTSTATE_PERSONAL_ID_ENTRY_PAS = 55;
  DEVICEEVENTSTATE_SWIPE_CVV_ENTRY = 56;
  DEVICEEVENTSTATE_SIGNATURE_CUSTOMER_MODE = 57;
  DEVICEEVENTSTATE_MANUAL_ENTRY_FALLBACK = 58;
  DEVICEEVENTSTATE_SELECT_MULTI_MID = 59;
}

message Discount {
  string Id = 1;
  Reference OrderRef = 2;
  Reference LineItemRef = 3;
  Reference DiscountRef = 4;
  string Name = 5;
  int64 Amount = 6;
  int64 Percentage = 7;
}

message DisplayDiscount {
  string Id = 1;
  string LineItemId = 2;
  string Name = 3;
  string Amount = 4;
  string Percentage = 5;
}

message DisplayLineItem {
  string Id = 1;
  string OrderId = 2;
  string Name = 3;
  string AlternateName = 4;
  string Price = 5;
  string UnitPrice = 6;
  string Quantity = 7;
  string UnitQuantity = 8;
  string Note = 9;
  bool Printed = 10;
  string BinName = 11;
  string UserData = 12;
  repeated DisplayDiscount Discounts = 13;
  string DiscountAmount = 14;
  bool Exchanged = 15;
  string ExchangedAmount = 16;
  repeated DisplayModification Modifications = 17;
  bool Refunded = 18;
  string RefundedAmount = 19;
  string Percent = 20;
}

message DisplayModification {
  string Id = 1;
  string Name = 2;
  string Amount = 3;
}

message DisplayPayment {
  string Id = 1;
  string Label = 2;
  string Amount = 3;
  string TipAmount = 4;
  string TaxAmount = 5;
}

message DisplayOrder {
  string Id = 1;
  string Currency = 2;
  string Employee = 3;
  string Subtotal = 4;
  string Tax = 5;
  string Total = 6;
  string Title = 7;
  string Note = 8;
  string ServiceChargeName = 9;
  string ServiceChargeAmount = 10;
  repeated DisplayDiscount Discounts = 11;
  repeated DisplayLineItem LineItems = 12;
  string AmountRemaining = 13;
  repeated DisplayPayment Payments = 14;
}

message EmailAddress {
  string Id = 1;
  string Email = 2;
  int64 VerifiedTime = 3;
}

enum ExternalDeviceState {
  EXTERNALDEVICESTATE_UNKNOWN = 0;
  EXTERNALDEVICESTATE_IDLE = 1;
  EXTERNALDEVICESTATE_BUSY = 2;
  EXTERNALDEVICESTATE_WAITING_FOR_POS = 3;
  EXTERNALDEVICESTATE_WAITING_FOR_CUSTOMER = 4;
}

message ExternalDeviceStateData {
  string ExternalPaymentId = 1;
  string CustomActivityId = 2;
}

message GermanInfo {
  string CardTrack2 = 1;
  string CardSequenceNumber = 2;
  string TransactionCaseGermany = 3;
  string TransactionTypeGermany = 4;
  string TerminalId = 5;
  string TraceNumber = 6;
  string OldTraceNumber = 7;
  string ReceiptNumber = 8;
  string TransactionAid = 9;
  string TransactionMsApp = 10;
  string TransactionScriptResults = 11;
  string ReceiptType = 12;
  string CustomerTransactionDolValues = 13;
  string MerchantTransactionDolValues = 14;
  string MerchantJournalDol = 15;
  string MerchantJournalDolValues = 16;
  string ConfigMerchantId = 17;
  string ConfigProductLabel = 18;
  string HostResponseAidParBmp53 = 19;
  string HostResponsePrintDataBm60 = 20;
  string SepaElvReceiptFormat = 21;
  string SepaElvExtAppLabel = 22;
  string SepaElvPreNotification = 23;
  string SepaElvMandate = 24;
  string SepaElvCreditorId = 25;
  string SepaElvMandateId = 26;
  string SepaElvIban = 27;
  Reference PaymentRef = 28;
  Reference CreditRef = 29;
  Reference RefundRef = 30;
  Reference CreditRefundRef = 31;
}

enum HoursAvailable {
  HOURSAVAILABLE_UNKNOWN = 0;
  HOURSAVAILABLE_ALL = 1;
  HOURSAVAILABLE_BUSINESS = 2;
  HOURSAVAILABLE_CUSTOM = 3;
}

message HourRange {
  int32 start = 1;
  int32 end = 2;
}

message HoursReference {
  string Id = 1;
  HoursReferenceType Type = 2;
}

enum HoursReferenceType {
  HOURSREFERENCETYPE_UNKNOWN = 0;
  HOURSREFERENCETYPE_ORDER_TYPE = 1;
  HOURSREFERENCETYPE_ITEM_GROUP = 2;
}

message HoursSet {
  string Id = 1;
  string Name = 2;
  HoursReference Reference = 3;
  repeated HourRange Sunday = 4;
  repeated HourRange Monday = 5;
  repeated HourRange Tuesday = 6;
  repeated HourRange Wednesday = 7;
  repeated HourRange Thursday = 8;
  repeated HourRange Friday = 9;
  repeated HourRange Saturday = 10;
}

message IdentityDocument {
  string Type = 1;
  string Number = 2;
}

enum IdType {
  IDTYPE_UNKNOWN = 0;
  IDTYPE_DRIVERS_LICENSE = 1;
  IDTYPE_PASSPORT = 2;
}

message InputOption {
  KeyPress KeyPress = 1;
  string Description = 2;
}

enum KeyPress {
  KEYPRESS_NONE = 0;
  KEYPRESS_ENTER = 40;
  KEYPRESS_ESC = 41;
  KEYPRESS_BACKSPACE = 42;
  KEYPRESS_TAB = 43;
  KEYPRESS_STAR = 85;
  KEYPRESS_BUTTON_1 = 58;
  KEYPRESS_BUTTON_2 = 59;
  KEYPRESS_BUTTON_3 = 60;
  KEYPRESS_BUTTON_4 = 61;
  KEYPRESS_BUTTON_5 = 62;
  KEYPRESS_BUTTON_6 = 63;
  KEYPRESS_DIGIT_1 = 89;
  KEYPRESS_DIGIT_2 = 90;
  KEYPRESS_DIGIT_3 = 91;
  KEYPRESS_DIGIT_4 = 92;
  KEYPRESS_DIGIT_5 = 93;
  KEYPRESS_DIGIT_6 = 94;
  KEYPRESS_DIGIT_7 = 95;
  KEYPRESS_DIGIT_8 = 96;
  KEYPRESS_DIGIT_9 = 97;
  KEYPRESS_DIGIT_0 = 98;
}

message LineItem {
  string Id = 1;
  Reference OrderRef = 2;
  Reference Item = 3;
  string Name = 4;
  string AlternateName = 5;
  int64 Price = 6;
  int32 UnitQty = 7;
  string UnitName = 8;
  string ItemCode = 9;
  string Note = 10;
  bool Printed = 11;
  Reference ExchangedLineItem = 12;
  string BinName = 13;
  string UserData = 14;
  int64 CreatedTime = 15;
  int64 OrderClientCreatedTime = 16;
  repeated Discount Discounts = 17;
  int64 DiscountAmount = 18;
  bool Exchanged = 19;
  repeated Modification Modifications = 20;
  bool Refunded = 21;
  bool IsRevenue = 22;
  repeated TaxRate TaxRates = 23;
  repeated LineItemPayment Payments = 24;
}

message LineItemPayment {
  string Id = 1;
  Reference LineItemRef = 2;
  Reference PaymentRef = 3;
  int64 Percentage = 4;
  string BinName = 5;
  bool Refunded = 6;
}

message Message {
  int32 Version = 1;
  Methods method = 2;
}

enum Methods {
  METHODS_UNKNOWN = 0;
  METHODS_AAA_NULL = 1;
  METHODS_ACK = 2;
  METHODS_CLOSEOUT_RESPONSE = 3;
  METHODS_CLOSEOUT_REQUEST = 4;
  METHODS_CAPTURE_PRE_AUTH_RESPONSE = 5;
  METHODS_CAPTURE_PRE_AUTH = 6;
  METHODS_LAST_MSG_REQUEST = 7;
  METHODS_LAST_MSG_RESPONSE = 8;
  METHODS_TIP_ADJUST = 9;
  METHODS_TIP_ADJUST_RESPONSE = 10;
  METHODS_OPEN_CASH_DRAWER = 11;
  METHODS_SHOW_PAYMENT_RECEIPT_OPTIONS = 12;
  METHODS_SHOW_REFUND_RECEIPT_OPTIONS = 13;
  METHODS_SHOW_CREDIT_RECEIPT_OPTIONS = 14;
  METHODS_REFUND_RESPONSE = 15;
  METHODS_REFUND_REQUEST = 16;
  METHODS_TX_START = 17;
  METHODS_TX_START_RESPONSE = 18;
  METHODS_KEY_PRESS = 19;
  METHODS_UI_STATE = 20;
  METHODS_TX_STATE = 21;
  METHODS_FINISH_OK = 22;
  METHODS_FINISH_CANCEL = 23;
  METHODS_DISCOVERY_REQUEST = 24;
  METHODS_DISCOVERY_RESPONSE = 25;
  METHODS_TIP_ADDED = 26;
  METHODS_VERIFY_SIGNATURE = 27;
  METHODS_SIGNATURE_VERIFIED = 28;
  METHODS_PAYMENT_VOIDED = 29;
  METHODS_PRINT_PAYMENT = 30;
  METHODS_REFUND_PRINT_PAYMENT = 31;
  METHODS_PRINT_PAYMENT_MERCHANT_COPY = 32;
  METHODS_PRINT_CREDIT = 33;
  METHODS_PRINT_PAYMENT_DECLINE = 34;
  METHODS_PRINT_CREDIT_DECLINE = 35;
  METHODS_PRINT_TEXT = 36;
  METHODS_PRINT_IMAGE = 37;
  METHODS_TERMINAL_MESSAGE = 38;
  METHODS_SHOW_WELCOME_SCREEN = 39;
  METHODS_SHOW_THANK_YOU_SCREEN = 40;
  METHODS_SHOW_ORDER_SCREEN = 41;
  METHODS_BREAK = 42;
  METHODS_CASHBACK_SELECTED = 43;
  METHODS_PARTIAL_AUTH = 44;
  METHODS_VOID_PAYMENT = 45;
  METHODS_VOID_PAYMENT_RESPONSE = 46;
  METHODS_ORDER_ACTION_ADD_DISCOUNT = 47;
  METHODS_ORDER_ACTION_REMOVE_DISCOUNT = 48;
  METHODS_ORDER_ACTION_ADD_LINE_ITEM = 49;
  METHODS_ORDER_ACTION_REMOVE_LINE_ITEM = 50;
  METHODS_ORDER_ACTION_RESPONSE = 51;
  METHODS_VAULT_CARD = 52;
  METHODS_VAULT_CARD_RESPONSE = 53;
  METHODS_CARD_DATA = 54;
  METHODS_CARD_DATA_RESPONSE = 55;
  METHODS_LOG_MESSAGE = 56;
  METHODS_CONFIRM_PAYMENT_MESSAGE = 57;
  METHODS_PAYMENT_CONFIRMED = 58;
  METHODS_PAYMENT_REJECTED = 59;
  METHODS_RETRIEVE_PENDING_PAYMENTS = 60;
  METHODS_RETRIEVE_PENDING_PAYMENTS_RESPONSE = 61;
  METHODS_ACTIVITY_REQUEST = 62;
  METHODS_ACTIVITY_RESPONSE = 63;
  METHODS_REMOTE_ERROR = 64;
  METHODS_RETRIEVE_DEVICE_STATUS_REQUEST = 65;
  METHODS_RETRIEVE_DEVICE_STATUS_RESPONSE = 66;
  METHODS_CONFIGURATION_CHANGE = 67;
  METHODS_RESET_DEVICE_RESPONSE = 68;
  METHODS_ACTIVITY_MESSAGE_TO_ACTIVITY = 69;
  METHODS_ACTIVITY_MESSAGE_FROM_ACTIVITY = 70;
  METHODS_RETRIEVE_PAYMENT_REQUEST = 71;
  METHODS_RETRIEVE_PAYMENT_RESPONSE = 72;
  METHODS_PRINT_JOB_STATUS_REQUEST = 73;
  METHODS_PRINT_JOB_STATUS_RESPONSE = 74;
  METHODS_GET_PRINTERS_REQUEST = 75;
  METHODS_GET_PRINTERS_RESPONSE = 76;
  METHODS_CLOVER_DEVICE_LOG_REQUEST = 77;
  METHODS_SHOW_RECEIPT_OPTIONS = 78;
  METHODS_SHOW_RECEIPT_OPTIONS_RESPONSE = 79;
  METHODS_VOID_PAYMENT_REFUND = 80;
  METHODS_VOID_PAYMENT_REFUND_RESPONSE = 81;
  METHODS_REGISTER_FOR_CUST_DATA = 82;
  METHODS_CUSTOMER_INFO_MESSAGE = 83;
  METHODS_CUSTOMER_PROVIDED_DATA_MESSAGE = 84;
  METHODS_INVALID_STATE_TRANSITION = 85;
}

message Modification {
  string id = 1;
  Reference lineItemRef = 2;
  string name = 3;
  string alternateName = 4;
  int64 amount = 5;
  Modifier modifier = 6;
}

message Modifier {
  string Id = 1;
  string Name = 2;
  string AlternateName = 3;
  int64 Price = 4;
  Reference ModifierGroup = 5;
}

message Order {
  string Id = 1;
  string Currency = 2;
  repeated Customer Customers = 3;
  Reference Employee = 4;
  int64 Total = 5;
  string Title = 6;
  string Note = 7;
  OrderType OrderType = 8;
  bool TaxRemoved = 9;
  bool IsVat = 10;
  string State = 11;
  bool ManualTransaction = 12;
  bool GroupLineItems = 13;
  bool TestMode = 14;
  PayType PayType = 15;
  int64 CreatedTime = 16;
  int64 ClientCreatedTime = 17;
  int64 ModifiedTime = 18;
  int64 DeletedTimestamp = 19;
  ServiceCharge ServiceCharge = 20;
  repeated Discount Discounts = 21;
  repeated LineItem LineItems = 22;
  repeated OrderTaxRate TaxRates = 23;
  repeated Payment Payments = 24;
  repeated Refund Refunds = 25;
  repeated Credit Credits = 26;
  repeated Payment Voids = 27;
  Reference Device = 28;
}

message OrderTaxRate {
  string id = 1;
  string name = 2;
  int64 amount = 3;
}

message OrderType {
  string Id = 1;
  string LabelKey = 2;
  string Label = 3;
  bool Taxable = 4;
  bool IsDefault = 5;
  bool FilterCategories = 6;
  bool IsHidden = 7;
  int64 Fee = 8;
  int64 MinOrderAmount = 9;
  int64 MaxOrderAmount = 10;
  int64 MaxRadius = 11;
  int64 AvgOrderTime = 12;
  HoursAvailable HoursAvailable = 13;
  CustomerIdMethod CustomerIdMethod = 14;
  bool IsDeleted = 15;
  string SystemOrderTypeId = 16;
  HoursSet Hours = 17;
  repeated Reference Categories = 18;
}

message Payment {
  string Id = 1;
  Reference Order = 2;
  Reference Device = 3;
  Tender Tender = 4;
  int64 Amount = 5;
  int64 TipAmount = 6;
  int64 TaxAmount = 7;
  int64 CashbackAmount = 8;
  int64 CashTendered = 9;
  string ExternalPaymentId = 10;
  Reference Employee = 11;
  int64 CreatedTime = 12;
  int64 ClientCreatedTime = 13;
  int64 ModifiedTime = 14;
  bool Offline = 15;
  PaymentResult Result = 16;
  CardTransaction CardTransaction = 17;
  ServiceChargeAmount ServiceCharge = 18;
  repeated PaymentTaxRate TaxRates = 19;
  repeated Refund Refunds = 20;
  string Note = 21;
  repeated LineItemPayment LineItemPayments = 22;
  repeated AdditionalChargeAmount AdditionalCharges = 23;
  VoidReason VoidReason = 24;
  DccInfo dccInfo = 25;
  TransactionSettings TransactionSettings = 26;
  GermanInfo GermanInfo = 27;
  AppTracking AppTracking = 28;
  CashAdvanceExtra CashAdvanceExtra = 29;
  TransactionInfo TransactionInfo = 30;
  SignatureDisclaimer SignatureDisclaimer = 31;
  string ExternalReferenceId = 32;
  Reference Merchant = 33;
}

enum PaymentResult {
  PAYMENTRESULT_UNKNOWN = 0;
  PAYMENTRESULT_SUCCESS = 1;
  PAYMENTRESULT_FAIL = 2;
  PAYMENTRESULT_INITIATED = 3;
  PAYMENTRESULT_VOIDED = 4;
  PAYMENTRESULT_VOIDING = 5;
  PAYMENTRESULT_AUTH = 6;
  PAYMENTRESULT_AUTH_COMPLETED = 7;
}

message PaymentTaxRate {
  string Id = 1;
  Reference PaymentRef = 2;
  string Name = 3;
  int64 Rate = 4;
  bool IsDefault = 5;
  int64 TaxableAmount = 6;
}

enum PayType {
  PAYTYPE_UNKNOWN = 0;
  PAYTYPE_SPLIT_GUEST = 1;
  PAYTYPE_SPLIT_ITEM = 2;
  PAYTYPE_SPLIT_CUSTOM = 3;
  PAYTYPE_FULL = 4;
}

message PendingPaymentEntry {
  string PaymentId = 1;
  int64 Amount = 2;
}

message PhoneNumber {
  string Id = 1;
  string Phone = 2;
}

enum PingType {
  PINGTYPE_UNKNOWN = 0;
  PINGTYPE_PING = 1;
  PINGTYPE_PONG = 2;
}

message PlatformError {
  string Message = 1;
}

message Point {
  int32 X = 1;
  int32 Y = 2;
}

enum PrintCategory {
  PRINTCATEGORY_NONE = 0;
  ORDER = 1;
  RECEIPT = 2;
}

enum PrintJobStatus {
  PRINTJOBSTATUS_UNKNOWN = 0;
  PRINTJOBSTATUS_IN_QUEUE = 1;
  PRINTJOBSTATUS_PRINTING = 2;
  PRINTJOBSTATUS_DONE = 3;
  PRINTJOBSTATUS_ERROR = 4;
  PRINTJOBSTATUS_NOT_FOUND = 5;

}

message Printer {
  string Id = 1;
  string Mac = 2;
  string Model = 3;
  string Name = 4;
  string IpAddress = 5;
  PrinterType Type = 6;
}

enum PrinterType {
  PRINTERTYPE_UNKNOWN = 0;
  PRINTERTYPE_NETWORK = 1;
  PRINTERTYPE_MY_LOCAL = 2;
}

enum QueryStatus {
  QUERYSTATUS_UNKNOWN = 0;
  QUERYSTATUS_FOUND = 1;
  QUERYSTATUS_NOT_FOUND = 2;
  QUERYSTATUS_IN_PROGRESS = 3;
}

message Reference {
  string Id = 1;
}

message Refund {
  string Id = 1;
  Reference OrderRef = 2;
  Reference Device = 3;
  int64 Amount = 4;
  int64 TaxAmount = 5;
  int64 CreatedTime = 6;
  int64 ClientCreatedTime = 7;
  Reference Payment = 8;
  Reference Employee = 9;
  repeated Reference LineItems = 10;
  Tender OverrideMerchantTender = 11;
  repeated TaxableAmountRate TaxableAmountRates = 12;
  ServiceChargeAmount ServiceChargeAmount = 13;
}

enum ResponseCode {
  RESPONSECODE_UNKNOWN = 0;
  RESPONSECODE_SUCCESS = 1;
  RESPONSECODE_FAIL = 2;
  RESPONSECODE_UNSUPPORTED = 3;
  RESPONSECODE_CANCEL = 4;
  RESPONSECODE_ERROR = 5;
}

enum ResultStatus {
  RESULTSTATUS_UNKNOWN = 0;
  RESULTSTATUS_SUCCESS = 1;
  RESULTSTATUS_FAIL = 2;
  RESULTSTATUS_CANCEL = 3;
}

enum ReversalReason {
  REVERSALREASON_UNKNOWN = 0;
  REVERSALREASON_CHIP_DECLINE = 1;
  REVERSALREASON_CARDHOLDER_CANCELLATION = 2;
  REVERSALREASON_COMMUNICATION_ERROR = 3;
  REVERSALREASON_OTHER_REASON = 4;
}

enum SelectedService {
  SELECTEDSERVICE_UNKNOWN = 0;
  SELECTEDSERVICE_NONE = 1;
  SELECTEDSERVICE_PAYMENT = 2;
  SELECTEDSERVICE_REFUND = 3;
  SELECTEDSERVICE_CANCELLATION = 4;
  SELECTEDSERVICE_PRE_AUTH = 5;
  SELECTEDSERVICE_UPDATE_PRE_AUTH = 6;
  SELECTEDSERVICE_PAYMENT_COMPLETION = 7;
  SELECTEDSERVICE_CASH_ADVANCE = 8;
  SELECTEDSERVICE_DEFERRED_PAYMENT = 9;
  SELECTEDSERVICE_DEFERRED_PAYMENT_COMPLETION = 10;
  SELECTEDSERVICE_VOICE_AUTHORIZATION = 11;
  SELECTEDSERVICE_CARDHOLDER_DETECTION = 12;
}

message ServiceCharge {
  string id = 1;
  Reference orderRef = 2;
  string name = 3;
  bool enabled = 4;
  int64 percentage = 5;
  int64 percentageDecimal = 6;
}

message ServerTotalStats {
  string EmployeeId = 1;
  string EmployeeName = 2;
  BatchTotalType Sales = 3;
  BatchTotalType Refunds = 4;
  BatchTotalType Net = 5;
  BatchTotalType GiftCardLoads = 6;
  BatchTotalType GiftCardCashOuts = 7;
  BatchTotalType Tax = 8;
  BatchTotalType Tips = 9;
}

message ServiceChargeAmount {
  string Id = 1;
  string Name = 2;
  int64 Amount = 3;
  Reference PaymentRef = 4;
}

message Signature {
  int32 Width = 1;
  int32 Height = 2;
  repeated Stroke Strokes = 3;
}

message SignatureDisclaimer {
  string DisclaimerText = 1;
  map<string, string> DisclaimerValues = 2;
  Reference PaymentRef = 3;
}

message Stroke {
  repeated Point Points = 1;
}

message TaxableAmountRate {
  string Id = 1;
  string Name = 2;
  int64 TaxableAmount = 3;
  int64 Rate = 4;
  int64 TaxAmount = 5;
  bool IsVat = 6;
}

message TaxRate {
  string Id = 1;
  Reference LineItemRef = 2;
  string Name = 3;
  int64 Rate = 4;
  bool IsDefault = 5;
  repeated Reference Items = 6;
}

enum TipMode {
  TIPMODE_UNKNOWN = 0;
  TIPMODE_TIP_PROVIDED = 1;
  TIPMODE_ON_SCREEN_BEFORE_PAYMENT = 2;
  TIPMODE_ON_SCREEN_AFTER_PAYMENT = 3;
  TIPMODE_ON_PAPER = 4;
  TIPMODE_NO_TIP = 5;
}

message TipSuggestion {
  string Id = 1;
  string Name = 2;
  int64 Percentage = 3;
  bool IsEnabled = 4;
}

message Tender {
  string Id = 1;
  bool Editable = 2;
  string LabelKey = 3;
  string Label = 4;
  bool OpensCashDrawer = 5;
  bool SupportsTipping = 6;
  bool Enabled = 7;
  bool Visible = 8;
  string Instructions = 9;
}

enum TransactionFormat {
  TRANSACTIONFORMAT_UNKNOWN = 0;
  TRANSACTIONFORMAT_DEFAULT = 1;
  TRANSACTIONFORMAT_NEXO = 2;
}

message TransactionInfo {
  string LanguageIndicator = 1;
  string TransactionLocale = 2;
  AccountType AccountSelection = 3;
  Reference PaymentRef = 4;
  Reference CreditRef = 5;
  Reference RefundRef = 6;
  Reference CreditRefundRef = 7;
  string FiscalInvoiceNumber = 8;
  int32 InstallmentsQuantity = 9;
  string InstallmentsPlanCode = 10;
  string InstallmentsPlanId = 11;
  string InstallmentsPlanDesc = 12;
  string CardTypeLabel = 13;
  int32 Stan = 14;
  IdentityDocument IdentityDocument = 15;
  string BatchNumber = 16;
  string ReceiptNumber = 17;
  int32 ReversalStan = 18;
  string ReversalMac = 19;
  string ReversalMacKsn = 20;
  string TerminalIdentification = 21;
  string MerchantIdentifier = 22;
  string MerchantNameLocation = 23;
  string MaskedTrack2 = 24;
  string ReceiptExtraData = 25;
  SelectedService SelectedService = 26;
  TransactionResult TransactionResult = 27;
  string TransactionTags = 28;
  TransactionFormat TxFormat = 29;
  string PanMask = 30;
  string TransactionSequenceCounter = 31;
  string ApplicationPanSequenceNumber = 32;
  ReversalReason ReversalReason = 33;
  bool IsTokenBasedTx = 34;
  string OrigTransactionSequenceCounter = 35;
  string TransactionSequenceCounterUpdate = 36;
}

enum TransactionResult {
  TRANSACTIONRESULT_UNKNOWN = 0;
  TRANSACTIONRESULT_APPROVED = 1;
  TRANSACTIONRESULT_DECLINED = 2;
  TRANSACTIONRESULT_ABORTED = 3;
  TRANSACTIONRESULT_VOICE_AUTHORIZATION = 4;
  TRANSACTIONRESULT_PAYMENT_PART_ONLY = 5;
  TRANSACTIONRESULT_PARTIALLY_APPROVED = 6;
  TRANSACTIONRESULT_NONE = 7;
}

message TransactionSettings {
  int32 CardEntryMethods = 1;
  bool DisableCashBack = 2;
  bool CloverShouldHandleReceipts = 3;
  bool ForcePinEntryOnSwipe = 4;
  bool DisableRestartTransactionOnFailure = 5;
  bool AllowOfflinePayment = 6;
  bool ApproveOfflinePaymentWithoutPrompt = 7;
  int64 SignatureThreshold = 8;
  DataEntryLocation SignatureEntryLocation = 9;
  TipMode TipMode = 10;
  int64 TippableAmount = 11;
  bool DisableReceiptSelection = 12;
  bool DisableDuplicateCheck = 13;
  bool AutoAcceptPaymentConfirmations = 14;
  bool AutoAcceptSignature = 15;
  bool ForceOfflinePayment = 16;
  repeated TipSuggestion TipSuggestions = 17;
  map<string, string> RegionalExtras = 18;
}

enum TransactionType {
  TRANSACTIONTYPE_UNKNOWN = 0;
  TRANSACTIONTYPE_PAYMENT = 1;
  TRANSACTIONTYPE_CREDIT = 2;
  TRANSACTIONTYPE_AUTH = 3;
  TRANSACTIONTYPE_DATA = 4;
  TRANSACTIONTYPE_BALANCE_INQUIRY = 5;
  TRANSACTIONTYPE_CAPTURE_PREAUT = 6;
}

message VaultedCard {
  string First6 = 1;
  string Last4 = 2;
  string CardholderName = 3;
  string ExpirationDate = 4;
  string Token = 5;
}

enum VoidReason {
  VOIDREASON_UNKNOWN = 0;
  VOIDREASON_USER_CANCEL = 1;
  VOIDREASON_TRANSPORT_ERROR = 2;
  VOIDREASON_REJECT_SIGNATURE = 3;
  VOIDREASON_REJECT_PARTIAL_AUTH = 4;
  VOIDREASON_NOT_APPROVED = 5;
  VOIDREASON_FAILED = 6;
  VOIDREASON_AUTH_CLOSED_NEW_CARD = 7;
  VOIDREASON_DEVELOPER_PAY_PARTIAL_AUTH = 8;
  VOIDREASON_REJECT_DUPLICATE = 9;
  VOIDREASON_REJECT_OFFLINE = 10;
}
