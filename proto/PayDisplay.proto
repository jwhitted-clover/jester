syntax = "proto3";

import "PayDisplay.common.proto";

package com.clover.grpc;

option csharp_namespace = "Clover.Grpc";

service PayDisplay {
  // Connection
  rpc Create (CreateRequest) returns (CreateResponse);
  rpc Initialize (InitializeRequest) returns (InitializeResponse);
  rpc Dispose (DisposeRequest) returns (DisposeResponse);
  rpc Ping (stream PingPacket) returns (stream PingPacket);

  // Connector
  rpc AcceptPayment (AcceptPaymentRequest) returns (Empty);
  rpc AcceptSignature (AcceptSignatureRequest) returns (Empty);
  rpc Auth (AuthRequest) returns (Empty);
  rpc CapturePreAuth (CapturePreAuthRequest) returns (Empty);
  rpc Closeout (CloseoutRequest) returns (Empty);
  rpc DisplayPaymentReceiptOptions (DisplayPaymentReceiptOptionsRequest) returns (Empty);
  rpc DisplayReceiptOptions (DisplayReceiptOptionsRequest) returns (Empty);
  rpc InvokeInputOption (InvokeInputOptionRequest) returns (Empty);
  rpc ManualRefund (ManualRefundRequest) returns (Empty);
  rpc OpenCashDrawer (OpenCashDrawerRequest) returns (Empty);
  rpc PreAuth (PreAuthRequest) returns (Empty);
  rpc Print (PrintRequest) returns (Empty);
  rpc ReadCardData (ReadCardDataRequest) returns (Empty);
  rpc RefundPayment (RefundPaymentRequest) returns (Empty);
  rpc RegisterForCustomerProvidedData (RegisterForCustomerProvidedDataRequest) returns (Empty);
  rpc RejectPayment (RejectPaymentRequest) returns (Empty);
  rpc RejectSignature (RejectSignatureRequest) returns (Empty);
  rpc RemoveDisplayOrder (RemoveDisplayOrderRequest) returns (Empty);
  rpc ResetDevice (ResetDeviceRequest) returns (Empty);
  rpc RetrieveDeviceStatus (RetrieveDeviceStatusRequest) returns (Empty);
  rpc RetrievePayment (RetrievePaymentRequest) returns (Empty);
  rpc RetrievePendingPayments (RetrievePendingPaymentsRequest) returns (Empty);
  rpc RetrievePrinters (RetrievePrintersRequest) returns (Empty);
  rpc RetrievePrintJobStatus (RetrievePrintJobStatusRequest) returns (Empty);
  rpc Sale (SaleRequest) returns (Empty);
  rpc SendMessageToActivity (SendMessageToActivityRequest) returns (Empty);
  rpc SetCustomerInfo (SetCustomerInfoRequest) returns (Empty);
  rpc ShowDisplayOrder (ShowDisplayOrderRequest) returns (Empty);
  rpc ShowMessage (ShowMessageRequest) returns (Empty);
  rpc ShowThankYouScreen (ShowThankYouScreenRequest) returns (Empty);
  rpc ShowWelcomeScreen (ShowWelcomeScreenRequest) returns (Empty);
  rpc StartCustomActivity (StartCustomActivityRequest) returns (Empty);
  rpc TipAdjustAuth (TipAdjustAuthRequest) returns (Empty);
  rpc VaultCard (VaultCardRequest) returns (Empty);
  rpc VoidPayment (VoidPaymentRequest) returns (Empty);
  rpc VoidPaymentRefund (VoidPaymentRefundRequest) returns (Empty);

  // Listener
  rpc OnAuthResponse (Empty) returns (stream AuthResponse);
  rpc OnCapturePreAuthResponse (Empty) returns (stream CapturePreAuthResponse);
  rpc OnCloseoutResponse (Empty) returns (stream CloseoutResponse);
  rpc OnConfirmPaymentRequest (Empty) returns (stream ConfirmPaymentRequest);
  rpc OnCustomActivityResponse (Empty) returns (stream CustomActivityResponse);
  rpc OnCustomerProvidedData (Empty) returns (stream CustomerProvidedDataEvent);
  rpc OnDeviceActivityEnd (Empty) returns (stream DeviceEvent);
  rpc OnDeviceActivityStart (Empty) returns (stream DeviceEvent);
  rpc OnDeviceConnected (Empty) returns (stream Empty);
  rpc OnDeviceDisconnected (Empty) returns (stream Empty);
  rpc OnDeviceError (Empty) returns (stream DeviceErrorEvent);
  rpc OnDeviceReady (Empty) returns (stream MerchantInfo);
  rpc OnDisplayReceiptOptionsResponse (Empty) returns (stream DisplayReceiptOptionsResponse);
  rpc OnInvalidStateTransitionResponse (Empty) returns (stream InvalidStateTransitionNotification);
  rpc OnManualRefundResponse (Empty) returns (stream ManualRefundResponse);
  rpc OnMessageFromActivity (Empty) returns (stream MessageFromActivity);
  rpc OnPreAuthResponse (Empty) returns (stream PreAuthResponse);
  rpc OnPrintJobStatusRequest (Empty) returns (stream PrintJobStatusRequest);
  rpc OnPrintJobStatusResponse (Empty) returns (stream PrintJobStatusResponse);
  rpc OnPrintManualRefundDeclineReceipt (Empty) returns (stream PrintManualRefundDeclineReceiptMessage);
  rpc OnPrintManualRefundReceipt (Empty) returns (stream PrintManualRefundReceiptMessage);
  rpc OnPrintPaymentDeclineReceipt (Empty) returns (stream PrintPaymentDeclineReceiptMessage);
  rpc OnPrintPaymentMerchantCopyReceipt (Empty) returns (stream PrintPaymentMerchantCopyReceiptMessage);
  rpc OnPrintPaymentReceipt (Empty) returns (stream PrintPaymentReceiptMessage);
  rpc OnPrintRefundPaymentReceipt (Empty) returns (stream PrintRefundPaymentReceiptMessage);
  rpc OnReadCardDataResponse (Empty) returns (stream ReadCardDataResponse);
  rpc OnRefundPaymentResponse (Empty) returns (stream RefundPaymentResponse);
  rpc OnResetDeviceResponse (Empty) returns (stream ResetDeviceResponse);
  rpc OnRetrieveDeviceStatusResponse (Empty) returns (stream RetrieveDeviceStatusResponse);
  rpc OnRetrievePaymentResponse (Empty) returns (stream RetrievePaymentResponse);
  rpc OnRetrievePendingPaymentsResponse (Empty) returns (stream RetrievePendingPaymentsResponse);
  rpc OnRetrievePrintersResponse (Empty) returns (stream RetrievePrintersResponse);
  rpc OnSaleResponse (Empty) returns (stream SaleResponse);
  rpc OnTipAdded (Empty) returns (stream TipAddedMessage);
  rpc OnTipAdjustAuthResponse (Empty) returns (stream TipAdjustAuthResponse);
  rpc OnVaultCardResponse (Empty) returns (stream VaultCardResponse);
  rpc OnVerifySignatureRequest (Empty) returns (stream VerifySignatureRequest);
  rpc OnVoidPaymentRefundResponse (Empty) returns (stream VoidPaymentRefundResponse);
  rpc OnVoidPaymentResponse (Empty) returns (stream VoidPaymentResponse);
}

message AcceptPaymentRequest {
  Payment Payment = 1;
}

message AcceptSignatureRequest {
  Payment Payment = 1;
}

message AuthRequest {
  bool DisableCashback = 1;
  int64 TaxAmount = 2;
  int64 TippableAmount = 3;
  bool AllowOfflinePayment = 4;
  bool ApproveOfflinePaymentWithoutPrompt = 5;
  bool ForceOfflinePayment = 6;
  // TransactionRequest
  int64 SignatureThreshold = 7;
  DataEntryLocation SignatureEntryLocation = 8;
  bool AutoAcceptSignature = 9;
  repeated TipSuggestion TipSuggestions = 10;
  // BaseTransactionRequest
  bool DisablePrinting = 11;
  bool CardNotPresent = 12;
  bool DisableRestartTransactionOnFail = 13;
  int64 Amount = 14;
  int32 CardEntryMethods = 15;
  VaultedCard VaultedCard = 16;
  string ExternalId = 17;
  TransactionType Type = 18;
  bool DisableDuplicateChecking = 19;
  bool DisableReceiptSelection = 20;
  bool AutoAcceptPaymentConfirmations = 21;
  map<string, string> Extras = 22;
  map<string, string> RegionalExtras = 23;
  // BaseRequest
  string RequestId = 24;
}

message AuthResponse {
  // PaymentResponse
  Payment Payment = 1;
  Signature Signature = 2;
  // BaseResponse
  bool Success = 3;
  ResponseCode Result = 4;
  string Reason = 5;
  string Message = 6;
}

message CapturePreAuthRequest {
  string PaymentID = 1;
  int64 Amount = 2;
  int64 TipAmount = 3;
  // BaseRequest
  string RequestId = 4;
}

message CapturePreAuthResponse {
  string PaymentId = 1;
  int64 Amount = 2;
  int64 TipAmount = 3;
}

message CloseoutRequest {
  bool AllowOpenTabs = 1;
  string BatchId = 2;
    // BaseRequest
  string RequestId = 3;
}

message CloseoutResponse {
  Batch Batch = 1;
  // BaseResponse
  bool Success = 2;
  ResponseCode Result = 3;
  string Reason = 4;
  string Message = 5;
}

message ConfirmPaymentRequest {
    Payment Payment = 1;
    repeated Challenge Challenges = 2;
}

message CreateRequest {
}

message CreateResponse { 
}

message CustomActivityResponse {
  string Action = 1;
  string Payload = 2;
  // BaseResponse
  bool Success = 3;
  ResponseCode Result = 4;
  string Reason = 5;
  string Message = 6;
}

message CustomerProvidedDataEvent {
  string EventId = 1;
  DataProviderConfig Config = 2;
  string Data = 3;
  // BaseResponse
  bool Success = 4;
  ResponseCode Result = 5;
  string Reason = 6;
  string Message = 7;
}

message DeviceEvent {
  DeviceEventState EventState = 1;
  int32 Code = 2;
  string Message = 3;
  repeated InputOption InputOptions = 4;
}

message DeviceErrorEvent {
  DeviceErrorType ErrorType = 1;
  DeviceErrorCode Code = 2;
  PlatformError Cause = 3;
  string Message = 4;
}

message DeviceInfo {
  string Name = 1;
  string Serial = 2;
  string Model = 3;
  bool SupportsAcks = 4;
}

message DisplayPaymentReceiptOptionsRequest {
  string OrderID = 1;
  string PaymentID = 2;
  bool DisablePrinting = 3;
  // BaseRequest
  string RequestId = 4;
}

message DisplayReceiptOptionsRequest {
  string OrderId = 1;
  string PaymentId = 2;
  string RefundId = 3;
  string CreditId = 4;
  bool DisablePrinting = 5;
  // BaseRequest
  string RequestId = 6;
}

message DisplayReceiptOptionsResponse {
  ResultStatus Status = 1;
  // BaseResponse
  bool Success = 2;
  ResponseCode Result = 3;
  string Reason = 4;
  string Message = 5;
}

message DisposeRequest {
}

message DisposeResponse {
}

message Empty {
}

message InitializeRequest {
}

message InitializeResponse {
}

message InvalidStateTransitionNotification {
  string RequestedTransition = 1;
  string State = 2;
  string Substate = 3;
  ExternalDeviceStateData Data = 4;
  // BaseResponse
  bool Success = 5;
  ResponseCode Result = 6;
  string Reason = 7;
  string Message = 8;
}

message InvokeInputOptionRequest {
  InputOption InputOption = 1;
}

message ManualRefundRequest {
  // BaseTransactionRequest
  bool DisablePrinting = 1;
  bool CardNotPresent = 2;
  bool DisableRestartTransactionOnFail = 3;
  int64 Amount = 4;
  int32 CardEntryMethods = 5;
  VaultedCard VaultedCard = 6;
  string ExternalId = 7;
  TransactionType Type = 8;
  bool DisableDuplicateChecking = 9;
  bool DisableReceiptSelection = 10;
  bool AutoAcceptPaymentConfirmations = 11;
  map<string, string> Extras = 12;
  map<string, string> RegionalExtras = 13;
  // BaseRequest
  string RequestId = 14;
}

message ManualRefundResponse {
  Credit Credit = 1;
  // BaseResponse
  bool Success = 2;
  ResponseCode Result = 3;
  string Reason = 4;
  string Message = 5;
}

message MerchantInfo {
  DeviceInfo Device = 1;
  string MerchantId = 2;
  string MerchantName = 3;
  string MerchantMId = 4;
  bool SupportsPreAuths = 5;
  bool SupportsVaultCards = 6;
  bool SupportsManualRefunds = 7;
  bool SupportsTipAdjust = 8;
  bool SupportsRemoteConfirmation = 9;
  bool SupportsNakedCredit = 10;
  bool SupportsMultiPayToken = 11;
  bool SupportsAcknowledgement = 12;
  bool SupportsVoidPaymentResponse = 13;
  bool SupportsPreAuth = 14;
  bool SupportsAuth = 15;
  bool SupportsVaultCard = 16;
}

message MessageFromActivity {
  string Action = 1;
  string Payload = 2;
}

message OpenCashDrawerRequest {
  string Reason = 1;
  string PrinterId = 2;
  // BaseRequest
  string RequestId = 3;
}

message PreAuthRequest {
  bool AllowOfflinePayment = 1;
  bool ApproveOfflinePaymentWithoutPrompt = 2;
  bool ForceOfflinePayment = 3;
  // BaseTransactionRequest
  bool DisablePrinting = 4;
  bool CardNotPresent = 5;
  bool DisableRestartTransactionOnFail = 6;
  int64 Amount = 7;
  int32 CardEntryMethods = 8;
  VaultedCard VaultedCard = 9;
  string ExternalId = 10;
  TransactionType Type = 11;
  bool DisableDuplicateChecking = 12;
  bool DisableReceiptSelection = 13;
  bool AutoAcceptPaymentConfirmations = 14;
  map<string, string> Extras = 15;
  map<string, string> RegionalExtras = 16;
  // BaseRequest
  string RequestId = 17;
}

message PreAuthResponse {
  // PaymentResponse
  Payment Payment = 1;
  Signature Signature = 2;
  // BaseResponse
  bool Success = 3;
  ResponseCode Result = 4;
  string Reason = 5;
  string Message = 6;
}

message PingPacket {
  int32 Id = 1;
  PingType Type = 2;
}

message PrintJobStatusRequest {
  string PrintRequestId = 1;
  // BaseRequest
  string RequestId = 2;
}

message PrintJobStatusResponse {
  string printRequestId = 1;
  PrintJobStatus status = 2;
  // BaseResponse
  bool Success = 3;
  ResponseCode Result = 4;
  string Reason = 5;
  string Message = 6;
}

message PrintManualRefundDeclineReceiptMessage {
  Credit Credit = 1;
  // BaseResponse
  bool Success = 2;
  ResponseCode Result = 3;
  string Reason = 4;
  string Message = 5;
}

message PrintManualRefundReceiptMessage {
  Credit Credit = 1;
  // BaseResponse
  bool Success = 2;
  ResponseCode Result = 3;
  string Reason = 4;
  string Message = 5;
}

message PrintPaymentDeclineReceiptMessage {
  Payment Payment = 1;
  // BaseResponse
  bool Success = 2;
  ResponseCode Result = 3;
  string Reason = 4;
  string Message = 5;
}

message PrintPaymentMerchantCopyReceiptMessage {
  Payment Payment = 1;
  // BaseResponse
  bool Success = 2;
  ResponseCode Result = 3;
  string Reason = 4;
  string Message = 5;
}

message PrintPaymentReceiptMessage {
  Order Order = 1;
  Payment Payment = 2;
  // BaseResponse
  bool Success = 3;
  ResponseCode Result = 4;
  string Reason = 5;
  string Message = 6;
}

message PrintRefundPaymentReceiptMessage {
  Payment Payment = 1;
  Refund Refund = 2;
  Order Order = 3;
  // BaseResponse
  bool Success = 4;
  ResponseCode Result = 5;
  string Reason = 6;
  string Message = 7;
}

message PrintRequest {
  repeated bytes Images = 1;
  repeated string ImageUrLs = 2;
  repeated string Text = 3;
  string PrintRequestId = 4;
  string PrintDeviceId = 5;
  // BaseRequest
  string RequestId = 6;
}

message ReadCardDataRequest {
  int32 CardEntryMethods = 1;
  bool IsForceSwipePinEntry = 2;
  // BaseRequest
  string RequestId = 3;
}

message ReadCardDataResponse {
  CardData CardData = 1;
  // BaseResponse
  bool Success = 2;
  ResponseCode Result = 3;
  string Reason = 4;
  string Message = 5;
}

message RefundPaymentRequest {
  bool FullRefund = 1;
  string OrderId = 2;
  string PaymentId = 3;
  int64 Amount = 4;
  bool DisablePrinting = 5;
  bool DisableReceiptSelection = 6;
  map<string, string> Extras = 7;
  // BaseRequest
  string RequestId = 8;
}

message RefundPaymentResponse {
  string OrderId = 1;
  string PaymentId = 2;
  Refund Refund = 3;
  // BaseResponse
  bool Success = 4;
  ResponseCode Result = 5;
  string Reason = 6;
  string Message = 7;
}

message RegisterForCustomerProvidedDataRequest {
  repeated DataProviderConfig Configurations = 1;
  // BaseRequest
  string RequestId = 2;
}

message RejectPaymentRequest {
  Payment Payment = 1;
  Challenge Challenge = 2;
}

message RejectSignatureRequest {
  Payment Payment = 1;
}

message RemoveDisplayOrderRequest {
  DisplayOrder DisplayOrder = 1;
}

message ResetDeviceRequest {
}

message ResetDeviceResponse {
  ExternalDeviceState State = 1;
  // BaseResponse
  bool Success = 2;
  ResponseCode Result = 3;
  string Reason = 4;
  string Message = 5;
}

message RetrieveDeviceStatusRequest {
  bool SendLastMessage = 1;
}

message RetrieveDeviceStatusResponse {
  ExternalDeviceState State = 1;
  ExternalDeviceStateData Data = 2;
  // BaseResponse
  bool Success = 3;
  ResponseCode Result = 4;
  string Reason = 5;
  string Message = 6;
}

message RetrievePaymentRequest {
  string ExternalPaymentId = 1;
}

message RetrievePaymentResponse {
  string ExternalPaymentId = 1;
  QueryStatus QueryStatus = 2;
  Payment Payment = 3;
  // BaseResponse
  bool Success = 4;
  ResponseCode Result = 5;
  string Reason = 6;
  string Message = 7;
}

message RetrievePendingPaymentsRequest {
}

message RetrievePendingPaymentsResponse {
  repeated PendingPaymentEntry PendingPayments = 1;
  // BaseResponse
  bool Success = 2;
  ResponseCode Result = 3;
  string Reason = 4;
  string Message = 5;
}

message RetrievePrintJobStatusRequest {
  string PrintRequestId = 1;
  // BaseRequest
  string RequestId = 2;
}

message RetrievePrintersRequest {
  PrintCategory Category = 1;
}

message RetrievePrintersResponse {
  repeated Printer Printers = 1;
  // BaseResponse
  bool Success = 2;
  ResponseCode Result = 3;
  string Reason = 4;
  string Message = 5;
}

message SaleRequest {
  bool DisableCashback = 1;
  int64 TaxAmount = 2;
  int64 TippableAmount = 3;
  bool AllowOfflinePayment = 4;
  bool ApproveOfflinePaymentWithoutPrompt = 5;
  int64 TipAmount = 6;
  TipMode TipMode = 7;
  bool ForceOfflinePayment = 8;
  // TransactionRequest
  int64 SignatureThreshold = 9;
  DataEntryLocation SignatureEntryLocation = 10;
  bool AutoAcceptSignature = 11;
  repeated TipSuggestion TipSuggestions = 12;
  // BaseTransactionRequest
  bool DisablePrinting = 13;
  bool CardNotPresent = 14;
  bool DisableRestartTransactionOnFail = 15;
  int64 Amount = 16;
  int32 CardEntryMethods = 17;
  VaultedCard VaultedCard = 18;
  string ExternalId = 19;
  TransactionType Type = 20;
  bool DisableDuplicateChecking = 21;
  bool DisableReceiptSelection = 22;
  bool AutoAcceptPaymentConfirmations = 23;
  map<string, string> Extras = 24;
  map<string, string> RegionalExtras = 25;
  // BaseRequest
  string RequestId = 26;
}

message SaleResponse {
  // PaymentResponse
  Payment Payment = 1;
  Signature Signature = 2;
  // BaseResponse
  bool Success = 3;
  ResponseCode Result = 4;
  string Reason = 5;
  string Message = 6;
}

message SendMessageToActivityRequest {
  string Action = 1;
  string Payload = 2;
}

message SetCustomerInfoRequest {
  CustomerInfo CustomerInfo = 1;
}

message ShowDisplayOrderRequest {
  DisplayOrder DisplayOrder = 1;
}

message ShowMessageRequest {
  string Message = 1;
}

message ShowThankYouScreenRequest {
}

message ShowWelcomeScreenRequest {
}

message StartCustomActivityRequest {
  string Action = 1;
  string Payload = 2;
  bool NonBlocking = 3;
  // BaseRequest
  string RequestId = 4;
}

message TipAddedMessage {
  Message Message = 1;
  int64 tipAmount = 2;
}

message TipAdjustAuthRequest {
  string PaymentID = 1;
  string OrderID = 2;
  int64 TipAmount = 3;
  // BaseRequest
  string RequestId = 4;
}

message TipAdjustAuthResponse {
  string PaymentId = 1;
  int64 TipAmount = 2;
  // BaseResponse
  bool Success = 3;
  ResponseCode Result = 4;
  string Reason = 5;
  string Message = 6;
}

message VaultCardRequest {
  int32 CardEntryMethods = 1;
}

message VaultCardResponse {
  VaultedCard Card = 1;
  // BaseResponse
  bool Success = 2;
  ResponseCode Result = 3;
  string Reason = 4;
  string Message = 5;
}

message VerifySignatureRequest {
  Signature Signature = 3;
  Payment Payment = 4;
}

message VoidPaymentRefundRequest {
  string RefundId = 1;
  string EmployeeId = 2;
  string OrderId = 3;
  bool DisablePrinting = 4;
  bool DisableReceiptSelection = 5;
  map<string, string> Extras = 6;
  // BaseRequest
  string RequestId = 7;
}

message VoidPaymentRefundResponse {
  string RefundId = 1;
  // BaseResponse
  bool Success = 2;
  ResponseCode Result = 3;
  string Reason = 4;
  string Message = 5;
}

message VoidPaymentRequest {
  string PaymentId = 1;
  VoidReason VoidReason = 2;
  string EmployeeId = 3;
  string OrderId = 4;
  map<string, string> Extras = 5;
  // BaseRequest
  string RequestId = 6;
}

message VoidPaymentResponse {
  string PaymentId = 1;
  Payment Payment = 2;
  // BaseResponse
  bool Success = 3;
  ResponseCode Result = 4;
  string Reason = 5;
  string Message = 6;
}
